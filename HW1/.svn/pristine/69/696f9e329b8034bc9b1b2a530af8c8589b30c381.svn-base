package edu.upenn.cis.cis455.webserver;

import org.apache.log4j.Logger;

/**
 * HTTPServer Class
 * 
 * About the problem we are solving:
 * We try to create a ThreadPooled Server in Java to handle HTTP Request/Response problems. 
 * We create a Daemon thread and a Worker thread and use a common queue(ArrayList here) 
 * where the Daemon Thread pushes and Worker Thread consumes from.
 * The delay added in the Worker thread ensures wait and notifyAll gets called.
 * 
 */
public class HttpServer {

	// Using log4j framework for logging
	static final Logger logger = Logger.getLogger(HttpServer.class);

	public static void main (String args[]){
		try{
			int serverPort = 0;
			String homeDirectory = "";
			boolean isValid = true;
			if(args.length == 0 ) {
				isValid = false;
				System.out.println("Name : Aakriti Singla");
				System.out.println("Seas Login Account : aakritis@seas.upenn.edu");
			}
			else if (args.length == 2 ) {
				isValid = true;
				serverPort = Integer.parseInt(args[0]);
				homeDirectory = args[1].toString();
			}
			else {
				isValid = false;
			}
			if (isValid) {
				// remove / parameter in the root directory 
				DaemonThread daemonThread = new DaemonThread (serverPort, homeDirectory);
				Thread thread = new Thread (daemonThread,"Daemon Thread");
				thread.start();
			}
		}
		catch (Exception e){
			logger.error(" [Output from log4j] Error in main "+ e);
			System.err.println(" [Output from log4j] Error in main "+ e);

		}
	}
}