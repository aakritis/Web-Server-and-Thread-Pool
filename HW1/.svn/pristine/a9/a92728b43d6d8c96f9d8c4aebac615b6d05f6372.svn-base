package edu.upenn.cis.cis455.webserver;

import java.util.Enumeration;
import java.util.Properties;
import java.util.UUID;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpSession;
import javax.servlet.http.HttpSessionContext;

@SuppressWarnings("deprecation")
class ERISSession implements HttpSession {

	private Properties m_props = new Properties();
	private boolean m_valid = true;

	private boolean isNew;
	private long creation_time;
	private ERISServletContext contextObj;
	private String session_ID;
	private long last_accessed_time;
	private int max_inactive_interval;

	public ERISSession () {
		try {
			session_ID = UUID.randomUUID().toString();

			// set time
			this.creation_time = System.currentTimeMillis();
			this.last_accessed_time = creation_time;
			// set boolean values
			isNew = true; 
			m_valid = true;
		}
		catch(Exception ex){
			System.err.println(" [Output from log4j] In ERISSession, Error occured in default constructor " + ex);
		}

	}

	public ERISSession (ERISServletContext contextObj) {
		try {
			this.contextObj = contextObj;
			// generate secure session id
			this.session_ID = UUID.randomUUID().toString();
			System.out.println(" [Output from log4j Value of Session ID in ERISSession " + this.session_ID);
			// set time
			this.creation_time = System.currentTimeMillis();
			this.last_accessed_time = creation_time;
			/*if(contextObj.getAttribute("session-timeout") != null){
				String timeoutStr = contextObj.getAttribute("session-timeout").toString();
				setMaxInactiveInterval(Integer.parseInt(timeoutStr));
			}*/
			// set boolean values
			isNew = true;
			m_valid = true;
		}
		catch(Exception ex){
			System.err.println(" [Output from log4j] In ERISSession, Error occured in parameterized constructor " + ex);
		}
	}

	public long getCreationTime() {
		// TODO Auto-generated method stub
		return this.creation_time;
	}

	public String getId() {
		// TODO Auto-generated method stub
		if(!isValid())
			throw new IllegalStateException();

		return this.session_ID;
	}

	public long getLastAccessedTime() {
		// TODO Auto-generated method stub
		if(!isValid())
			throw new IllegalStateException();

		return this.last_accessed_time;
	}

	public ServletContext getServletContext() {
		// TODO Auto-generated method stub
		return this.contextObj;
	}

	public void setMaxInactiveInterval(int arg0) {
		// TODO Auto-generated method stub
		this.max_inactive_interval = arg0;
	}

	public int getMaxInactiveInterval() {
		// TODO Auto-generated method stub
		return this.max_inactive_interval;
	}

	public HttpSessionContext getSessionContext() {
		// TODO Auto-generated method stub
		return null;
	}

	public Object getAttribute(String arg0) {
		// TODO Auto-generated method stub
		if(!isValid())
			throw new IllegalStateException();
		return m_props.get(arg0);
	}

	public Object getValue(String arg0) {
		// TODO Auto-generated method stub
		return m_props.get(arg0);
	}

	@SuppressWarnings("rawtypes")
	public Enumeration getAttributeNames() {
		// TODO Auto-generated method stub
		return m_props.keys();
	}

	public String[] getValueNames() {
		// TODO Auto-generated method stub
		return null;
	}

	public void setAttribute(String name, Object value) {
		if(!isValid())
			throw new IllegalStateException();
		if(value == null)
			this.removeAttribute(name);
		m_props.put(name, value);
	}

	public void setLastAccessedTime(long time){
		last_accessed_time = time;
		isNew = false;
	}

	public void putValue(String arg0, Object arg1) {
		//m_props.put(arg0, arg1);
	}

	public void removeAttribute(String name) {
		if(!isValid())
			throw new IllegalStateException();
		if(m_props.isEmpty())
			return;
		else
			m_props.remove(name);
	}

	public void removeValue(String arg0) {
		//m_props.remove(arg0);
	}

	public void invalidate() {
		if(!isValid())
			throw new IllegalStateException();
		m_valid = false;
	}

	public boolean isNew() {
		// TODO Auto-generated method stub
		if(!isValid())
			throw new IllegalStateException();
		return this.isNew;
	}

	boolean isValid() {
		return m_valid;
	}

}
